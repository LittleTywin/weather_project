"""
Django settings for weather_project project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
with open('config.json','r') as f:
    config = json.load(f)
SECRET_KEY = config['DJANGO_SECRET_KEY']
WEATHER_API_KEY=config['WEATHER_API_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config['DEBUG']

ALLOWED_HOSTS = config['ALLOWED_HOSTS_LOCAL']
WITH_SQL_PROXY = config['WITH_SQL_PROXY']
import pymysql  # noqa: 402
pymysql.version_info = (1, 4, 6, 'final', 0)  # change mysqlclient version
pymysql.install_as_MySQLdb()
# Application definition
if os.getenv('GAE_APPLICATION', None):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': config['SQL_HOST'],
            'USER': config['SQL_USER'],
            'PASSWORD': config['SQL_USER_PASSWORD'],
            'NAME': config['SQL_INSTANCE_NAME'],
        }
    }
    DEBUG = False
    ALLOWED_HOSTS = config['ALLOWED_HOSTS_DEPLOY']
    SECURE_SSL_REDIRECT=True
    SECURE_HSTS_SECONDS=True
    SECURE_HSTS_INCLUDE_SUBDOMAINS=True
    SECURE_HSTS_PRELOAD=True
    SESSION_COOKIE_SECURE=True
    CSRF_COOKIE_SECURE=True
else:
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = config['DEBUG']
    ALLOWED_HOSTS = config['ALLOWED_HOSTS_LOCAL']
    if WITH_SQL_PROXY: ##runing app locally with remote sql db
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.mysql',
                'HOST': '127.0.0.1',
                'PORT': '3306',
                'NAME': config['SQL_INSTANCE_NAME'],
                'USER': config['SQL_USER'],
                'PASSWORD': config['SQL_USER_PASSWORD'],
            }
        }
        
    else:   ##running localy with sqlite3
        # Database
        # https://docs.djangoproject.com/en/3.1/ref/settings/#databases
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.sqlite3',
                'NAME': BASE_DIR / 'db.sqlite3',
            }
        }


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    ##my apps
    'users.apps.UsersConfig',
    'weather.apps.WeatherConfig',
    ##3rd part
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'weather_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weather_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EET'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

LOGIN_URL = 'users:login'
STATIC_URL = '/static/'
STATIC_ROOT = 'static'
LOGIN_REDIRECT_URL = 'weather:home'

CRISPY_TEMPLATE_PACK = 'bootstrap4'
